{"version":3,"sources":["actions/types.js","db1.js","actions/loaction.js","db2.js","components/categories1.js","pages/categornative.js","pages/choosecatedit.js","pages/chooselocedit.js","components/catlistedit.js","pages/editcat.js","pages/editreact.js","pages/chooselocremove.js","components/footer3.js","components/getos.js","components/hellonative.js","components/notelist2.js","pages/index.js","components/navbar2.js","pages/newcategory.js","pages/newlocation.js","pages/remove2.js","pages/sectionlist12.js","googlemapreact/googlemapreact.js","pages/show.js","components/catlist.js","pages/showcategory2.js","reducers/loreducer.js","reducers/categoryreducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_LOCS","DB1","name","arguments","length","undefined","Object","classCallCheck","this","db1","PouchDB","get","err","doc","_id","title","body","alat","alng","category","createdat","Date","updatedat","status","put","res","console","log","allDocs","include_docs","descending","toString","rows","allnotes","notes","forEach","n","id","categ","query","emit","results","a","c","dbb","ddc","views","by_name","map","key","note","now","objectSpread","response","error","yes","note1","remove","ok","newcategory","bulkDocs","array","DB2","db2","compact","then","info","catch","all","b","Categories1","props","possibleConstructorReturn","getPrototypeOf","call","postitems","values","categories","react_default","createElement","className","Link","to","concat","Button_default","variant","onClick","context","router","history","goBack","style","backgroundColor","borderRadius","color","padding","textDecoration","textDecorationColor","ArrowBack_default","Component","contextTypes","Listitem1","_this","onpress","onpressitem","bind","assertThisInitialized","textcolor","selected","TouchableOpacity","onPress","View","Text","React","PureComponent","Categornative","_this2","state","Map","_keyextractor","item","index","_onpressitem","setState","set","_renderitem","_ref","categornative_Listitem1","indicator11","loading","ActivityIndicator","size","animating","renderme1","text1","renderme2","_this3","styles","box","text","textunder","FlatList","data","extraData","keyExtractor","renderItem","_ref2","ListFooterComponent","StyleSheet","create","fontWeight","textDecorationLine","Choosecatedit","choosecatedit_Listitem1","Listitemloc","fontSize","Chooselocedit","chooselocedit_Listitemloc","myindex","dbcat","dbapp","catsections","sectionsnotes","getallnotes","getcategories","catvalues","notvalues","searray","titlehere","notesarray","toConsumableArray","obj","push","arr","display","flex","ScrollView","SectionList","height","section","renderSectionHeader","_ref3","marginBottom","sections","Catlistedit","rendernotes","Editcat","updatevalue","e","defineProperty","target","value","handlesave","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","preventDefault","catnotes","onsaveedit","replace","stop","_x","apply","mounted","_rev","cat","uddatedat","getcategory","catlist","onSubmit","flexDirection","alignItems","type","required","autoFocus","placeholder","onChange","Landscape_default","catlistedit","textAlign","Editpage","handlesaveedit","dbloc","noteloc","dbcateg","onenote","loc","sort","aaa","bbb","textA","toUpperCase","textB","localeCompare","optioni","step","chooselocremove","chooselocremove_Listitemloc","Footer3","classes","marginTop","root","button","LibraryBooks_default","ListRounded_default","withStyles","theme","alignSelf","onMouseOver","getos","userAgent","window","navigator","platform","os","indexOf","test","Hellonative","Notelist2","justifyContent","Indexpage","a11","notelist2","Navbar2","background","Home_default","Newcategory","onsave","sent","Newlocation","updatevaluetitle","_objectSpread2","Removepage2","handleremove","anote","localStorage","getItem","onremove","setItem","after","dbchanges","titletoremove","gracerfulunmount","removeEventListener","addEventListener","nextProps","nextState","readOnly","Sectionlist12","sectionlist12_Listitemloc","container","Mymapcomponent","Googlemapreact","parseFloat","width","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","googlemapreact_Mymapcomponent","lat","lng","defaultProps","center","zoom","Showpage","fvibration","Vibration","vibrate","cancel","googlemapreact","Catlist","Showcategory2","components_catlist","initialstate","items","item1","combineReducers","rootlocations","action1","payload","store","thunk","createStore","rootreducer","applyMiddleware","stylesnative","App","aos","createnote","abrupt","_callee2","_ref4","_context2","editnote","_x2","_ref5","_callee3","lenkeys","renotes","_context3","keys","removenote","reduce","object","_x3","getcatnotesap","_ref6","_callee4","_context4","getcatnotesdb","_x4","handlesavecategory","_ref7","_callee5","_ref8","_context5","createcategory","_x5","handlesaveeditcat","_ref9","_callee6","_context6","editcat","editarray","_x6","_x7","myos","mynotes","Route","exact","path","component","pages_Indexpage","assign","show","match","params","newlocation","pages_newcategory","choosecatedit","chooselocedit","pages_chooselocremove","editreact","remove2","categornative","sectionlist12","categories1","showcategory2","reactvers","version","es","BrowserRouter","rendercontent","hellonative","navbar2_Navbar2","footer3","Boolean","location","hostname","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37d396ec.chunk.js","sourcesContent":["// export const FETCH_POSTS = 'FETCH_POSTS';;\n// export const NEW_POST = 'NEW_POSTS';\nexport const FETCH_LOCS = 'FETCH_LOCS';\nexport const NEW_LOC = 'NEW_LOC';\nexport const EDIT_LOC = 'EDIT_LOC';\nexport const FETCH_CAT = 'FETCH_CAT';\nexport const NEW_CAT = 'NEW_CAT';","import PouchDB from 'pouchdb';\n\nexport default class DB1 {\n    constructor(name =  'location1') {\n        this.db1 = new PouchDB(name);\n        \n        // console.log('db1.js constructor', this.db1);\n        // {force: true} option\n        // this.db1.put({\n        //         _id: 'perlov3301@gmail.com',\n        //         title: 'default Location',\n        //         body: 'tel-aviv',\n        //         alat: '32.084',\n        //         alng: '34.774',\n        //         category: 'tel aviv',\n        //         createdat: new Date(),\n        //         updatedat: new Date()\n        //       }, {force: true})\n        //   .then(function (response) {  console.log('db1 constructor: default was added'); })\n        //   .catch(function (err) { console.log('db1 constructor put error:', err.toString()); })\n        //   ;\n        this.db1.get('perlov3301@gmail.com', function(err, doc) {\n            doc = {\n                _id: 'perlov3301@gmail.com',\n                title: 'default Location',\n                body: 'tel-aviv',\n                alat: '32.084',\n                alng: '34.774',\n                category: 'tel aviv',\n                createdat: new Date(),\n                updatedat: new Date()\n            };\n            if (err) {\n                if (err.name === 'not found' || err.status === 409)  {\n                    this.db1.put(doc, function(err, res) {\n                        if (err) { console.log('db1.js;constructor put err'); }\n                    });\n                } else { \n                    console.log('db1.js;constructor;error after put default') }\n            }\n\n        });\n    }\n    async getallnotes( ) {\n        // include_docs when query returns it include all data instead of\n        // where or not the documents exists\n        let allnotes = await this.db1.allDocs({ include_docs: true, descending: false }\n          ,\n           function(err, doc) {\n              if (err) { console.log('db1.js getallnotes err=' + err.toString()); }\n              if (doc.rows === 'undefined' || doc.rows.length === 0) {\n                console.log('db1.js getallnotes befor doc.length=0');\n              } else { console.log('db1.js geallnotes was doc.length=', doc.rows.length); }\n            }\n          );\n        let notes = {};\n        // allnotes.rows response with docs\n        allnotes.rows.forEach((n) => {   notes[n.id] = n.doc;  });\n        return notes;\n    }\n    async getcategory(categ) {\n        console.log('db1;getcategory;categ=', categ);\n        let a = await this.db1.query(function(doc, emit) {\n            if (doc.category === categ.title) { emit(doc); }\n          }, {include_docs : true} , function(err, results) {\n            if (err) { return console.log(err); }\n            // handle result\n          });\n        let notes = {}; // notes.rows response with docs\n        a.rows.forEach((n) => { \n            console.log('db1;getcategory;n.doc.category=', n.doc.category);\n            notes[n.id] = n.doc; \n           });\n        return notes;\n    }\n    async getcatnotesdb (c) {\n        console.log('db1;getcatnotesdb;c = ', c);\n        let dbb = this.db1;\n        let notes = {}; // notes.rows response with docs\n\n        // let ddc = {\n        //     _id: '_design/index',\n        //     views: {\n        //       index: {\n        //         map: function mapFun(doc, emit) {\n        //           if (doc.category === c.title) {\n        //             emit(doc.category);\n        //           }\n        //         }.toString()\n        //       }\n        //     }\n        //   };\n          let ddc = {\n            _id: '_design/my_index',\n            views: {\n              by_name: {\n                map: function (doc, emit) { \n                        console.log('db1;getnotesdb;map;doc=', doc);\n                        if (doc.category === c.title) {\n                            emit(doc);\n                        }\n                     }.toString()\n              }\n            }\n          };\n        await dbb.put(ddc, function(err) {\n          if (err) { console.log('db1;getnotesdb;dbb.put;err=', err.toString()); }\n          if(err && err.name === 'conflict') {\n            return console.log('db1js;getcategorydb;put designdoc err=', \n                err.toString());\n          }\n          // find docs where category === c.title\n          console.log('db1js;getcatnotesdb;before query');\n          dbb.query('index',\n            {\n              key: c.title,\n              include_docs: true\n            },\n            function (err, res) {\n              console.log('query')\n              res.rows.forEach((n) => {   notes[n.id] = n.doc;  });\n            }\n          );\n        });\n        return notes;\n    }\n    async createnote(note) {\n        note.createdat = new Date();\n        note.updatedat = new Date();\n        let a = Date.now();\n        note._id = note.title + a.toString();\n        const res = await this.db1.put({ ...note}, function(err, response) {\n            if (err) { console.log('db1.js; createnote err=', err.toString()); }\n            console.log('db1.js; createnote res=', response);\n        });\n\n        return res;\n    }\n    async editnote(note) {\n        console.log('db1;editnote;note', note);\n        let dbb = this.db1;\n        // let yes = false;\n        note.updatedat = new Date();\n        // dbb.get(note._id, function(err, doc) {\n        //     if (err) { return console.log('db1;editnote;err=', err)}\n        //     dbb.put(doc);\n        // });\n        const res = await dbb.put({...note}, function(error, response) {\n            if (error) { console.log('db1.js;editnote put error=', \n              error.toString()); }\n           // yes = response.ok;\n        });\n        // const res = await this.db1.post({ ...note});\n        // const res = await this.db1.get(note._id, function(err, doc) {\n        //     if (err) { console.log('db1.js;editcat get err=', err.toString()); }\n        //     console.log('db1;editnote;afterput doc=', doc);\n           \n        // });\n        return res;\n    }\n    async getnote(_id) { \n        let yes = false;\n        let a = await this.db1.get(_id, function(err, doc) {\n            if (err) { return console.log(err.toString()); }\n            else { yes = true }\n        });\n        if (yes) { console.log('db1;getnote;a=', a); }\n        return a;\n     }\n    async removenote(note1) {\n        // let dbchanges = this.db1.changes({doc_ids: [note1._id]})\n        console.log('db1;removenote;note=', note1);\n        // let dbb = this.db1;\n        let yes = false;\n        let n = await this.db1.get(note1._id, function(err, doc)  {\n            if(err) { console.log('db1;removenote;get by id n=', n); }\n        });\n        await this.db1.remove(n, function(err, res) {\n            if (err) { return console.log('db1;removenote;remove err=', \n              err.toString()); }\n        console.log('db1;removenote;res=', res)\n            yes = res.ok;\n          });\n        return yes;\n    }\n    async editnotescategory(categ, newcategory) {\n        // from getcategory(cat)\n        console.log('db1;getcategory;categ=', categ);\n        let a = await this.db1.query(function(doc, emit) {\n            if (doc.category === categ.title) { emit(doc); }\n          }, {include_docs : true} , function(err, results) {\n            if (err) { return console.log(err); }\n            // handle result\n          });\n        let notes = {}; // notes.rows response with docs\n        a.rows.forEach((n) => { \n          console.log('db1;getcategory;n.doc.category=', n.doc.category);\n            n.doc.category = newcategory;\n            notes[n.id] = n.doc;  });\n        await this.db1.bulkDocs(notes, function(err, response) {\n              if (err) { return console.log(err); }\n              // handle result\n            });\n        return notes;\n    }\n    async editarray(array) {\n      await this.db1.bulkDocs(array, function(err, res) {\n        if (err) {  return console.log('db1;editarray', err.toString()); }\n      });\n    }\n}\n","import { FETCH_LOCS, NEW_LOC, EDIT_LOC } from './types';\nimport DB1 from '../db1';\n\nvar dbact = new DB1();\n\nexport function fetchlocations ()  {\n    return async function(dispatch) {\n        const notes = await dbact.getallnotes();\n        dispatch({\n            type: FETCH_LOCS,\n            payload: notes\n        });\n    };\n};\n// Es6 syntax\nexport const fetchlocations1 =  () => async (dispatch) => {\n    console.log('loactionjs; fetchlocation1');\n    const notes = await dbact.getallnotes();\n        dispatch({\n            type: FETCH_LOCS,\n            payload: notes\n        });\n};\nexport const addlocation = (note1) => async (dispatch) => {\n    let { id } = await this.state.dbapp.createnote(note1);\n    dispatch({\n        type: NEW_LOC,\n        payload: id\n    });\n}\nexport const editlocation = () => (dispatch) => {\n    const notes = dbact.getallnotes();\n    dispatch({\n        type: EDIT_LOC,\n        payload: notes\n    });\n}","import PouchDB from 'pouchdb';\n \nexport default class DB2 {\n    constructor(name =  'category2') {\n        this.db2 = new PouchDB(name);\n        // console.log('db2.js constructor1', this.db2);\n        // this.db2.destroy().catch(function(err) { console.log(err.toString()) });\n        // let a = 'tel aviv';\n        // let b = a.replace(/ /g,\"_\") + '_id';\n        // let doc = {\n        //       _id: b,\n        //       title: a,\n        //       createdat: new Date(),\n        //       updatedat: new Date()\n        //   };\n        // this.db2.put(doc, { force: true }, function(err, res) {\n        //   if (err) { console.log('db2;constructor;puterr', err.toString()) }\n        //   console.log('res', res);\n        // });\n        // this.db2.get('idtelaviv', function(err, doc) {\n        //     if (err) { \n        //       console.log('db2.js;constructor;get err=', err.toString()); \n        //       if (doc === undefined || doc === null || !doc._id) {\n        //          doc = {\n        //            _id: 'telavivid',\n        //            category: 'tel aviv',\n        //            createdat: new Date(),\n        //            updatedat: new Date()\n        //         };\n        //         return doc;\n        //       }\n        //     } \n        //   });\n        //   a = 'rishon le Zion';\n        //   b = a.replace(/ /g,\"_\") + '_id';\n        //   doc = {\n        //         _id: b,\n        //         title: a,\n        //         createdat: new Date(),\n        //         updatedat: new Date()\n        //     };\n        //   this.db2.put(doc, { force: true }, function(err, res) {\n        //     if (err) { console.log('db2;constructor;puterr', err.toString()) }\n        //     console.log('res', res);\n        //   });  \n        //   a = 'ramat gan';\n        //   b = a.replace(/ /g,\"_\") + '_id';\n        //   doc = {\n        //         _id: b,\n        //         title: a,\n        //         createdat: new Date(),\n        //         updatedat: new Date()\n        //     };\n        //   this.db2.put(doc, { force: true }, function(err, res) {\n        //     if (err) { console.log('db2;constructor;puterr', err.toString()) }\n        //     console.log('res', res);\n        //   }); \n          this.db2.compact().then(function (info) { }).catch(function (err) {\n            console.log('db2;compaction err=', err.toString());\n           });\n    } // constructor\n    async getcategories () {\n        // include_docs when query returns it include all data instead of\n        // where or not the documents exists\n        let all = await this.db2.allDocs({ include_docs: true } ,\n           function(err, doc) {\n              if (err) { console.log('db2.js getcategories err=' + err.toString()); }\n              if (doc.rows.length === 0) {\n                console.log('db2.js getcategories befor doc.length=0');\n              } else { console.log('db2.js getcategories was doc.length=', doc.rows.length); }\n            }\n          );\n        let a = {}; // actually it is array of docs\n        // all.rows response with docs\n        all.rows.forEach((b) => { a[b.id] = b.doc; });\n        return a ;\n    }\n  \n    async createcategory(c) {\n        c.createdat = new Date();\n        c.updatedat = new Date();\n        let a = Date.now();\n        c._id = c.title + a.toString();\n        const res = await this.db2.put({ ...c}, function(err, response) {\n            if (err) { console.log('db2.js; create err=', err.toString()); }\n            console.log('db2.js; createnote res=', response);\n        });\n        return res;\n    }\n    async getcat(_id) { \n        let yes = false;\n        let a = await this.db2.get(_id, function(err, doc) {\n            if (err) { return console.log(err.toString()); }\n            else { yes = true }\n        });\n        if (yes) { console.log('db2;getcat;a=', a); }\n        return a;\n     }\n    async editcat(c) {\n        console.log('db2;editcat;c=', c);\n        // const ddb = this.db2;\n        c.updatedat = new Date();\n        // let a = Date.now();\n        // c._id = c.title + a.toString();\n        const res = await this.db2.put(c, function(err, response) {\n            if (err) { console.log('db2.js; create err=', err.toString()); }\n            console.log('db2.js; createnote res=', response);\n        });\n        return res;\n    }\n    // async editnote(note) {\n    //     console.log('db1;editnote;note', note);\n    //     let dbb = this.db1;\n    //     let yes = false;\n    //     note.updatedat = new Date();\n    //     await dbb.put(note, function(error, response) {\n    //         if (error) { console.log('db1.js;editnote put error=', \n    //           error.toString()); }\n    //         yes = response.ok;\n    //     });\n    async getnote(note) {  }\n}\n","import React, { Component } from 'react';\nimport DB2 from '../db2';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\n class Categories1 extends Component {\n    constructor(props) {\n      super(props);\n      // this.state = {\n      //   dbcateg: new DB2(),\n      //   categories: {},\n      //   loading: true\n      // }\n    }\n    static contextTypes = {\n      router: () => null, // replace with PropTypes.object if you use them\n    }\n  //   async componentWillMount() {\n  //     const a = await this.state.dbcateg.getcategories();\n  //     this.setState({\n  //         categories: a,\n  //         loading: false\n  //     });\n  //   console.log(\"categories1;willmount;getcategories a.keys=\", Object.keys(a) + \n  //     \"; idtelaviv=\", a.idtelaviv );\n  // }\n   \n    async componentWillMount() {\n      // await console.log(\"categories1;will;props=\", this.props );\n      }\n  render() {\n    const a = Object.values(this.props.categories);\n    const postitems = a.map((n) => \n      <fieldset key={n._id}>\n        <legend>Object.values(this.state.categories).map</legend>\n        <h3 className=\"navbar\">\n          <Link to={`/categories/${n._id}`} > {n.title}</Link>\n        </h3>\n      </fieldset>);\n    // const postitems = this.state.categories.map(post => (\n    //   <div key={post.id}>\n    //     <h3>{post.category}</h3>\n    //   </div>\n    // ));\n    return (\n      <fieldset>\n        <legend>\n        <Button variant=\"contained\"  \n            onClick={this.context.router.history.goBack}\n            style={{backgroundColor: 'rgb(45,65, 100)',\n            borderRadius: '0.3em',\n            color: 'white',\n            padding: '0.1em 0.3em',\n            textDecoration: 'none',\n            textDecorationColor: 'blue'}} >\n          <ArrowBackIcon />back\n        </Button>\n          components/categories1js;min FlatList with Traversy</legend>\n        {postitems}\n      </fieldset>\n    )\n  }\n}\nexport default Categories1;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { fetchlocations1 } from '../actions/loactions';\n\nimport { StyleSheet,  Text, View, \n    FlatList,  TouchableOpacity,\n    ActivityIndicator } from 'react-native';\n// import { any } from '../../node_modules/react-native/flow/Map';\n// import { any } from 'prop-types';\n// import DB2 from '../db2';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitem1 extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    // I don't now why this works\n    //  this.props.onpressitem(this.props._id);\n    this.props.onpressitem(this.props.id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    console.log('categornative;listitem1;render,props=', this.props);\n    return (\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }}>\n            <h3 className=\"navbar\">\n              <Link to={`/categories/${this.props.id}`} \n                  style={{padding:'0.5em'}} > \n                {this.props.title}</Link>\n            </h3>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nclass Categornative extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderme1 = this.renderme1.bind(this);\n    this._renderitem = this._renderitem.bind(this);\n  }\n  \n  state =  {\n    selected: (new Map(): Map<string, boolean>),\n    // dbcateg: new DB2(),\n    // categories: {}\n  };\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount () {\n    // a is for setstate for categories\n    // const a = await this.state.dbcateg.getcategories();\n    // this.setState({\n    //     categories: a,\n    //     loading: false\n    // });\n  } // didmount\n  _keyextractor = (item, index) => item._id;\n  _onpressitem = (id) => {\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item}) => (\n    <Listitem1\n      id={item._id}\n      onpressitem={this._onpressitem}\n      selected={!!this.state.selected.get(item._id)}\n      title={item.title}\n  />\n  );\n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#0000ff\" animating />)\n    : null\n    ;\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  renderme2 = (\n    <Link to=\"/\" >\n      <Button variant=\"contained\"  style={{backgroundColor: 'rgb(45,65, 100)',\n              borderRadius: '0.3em',\n              color: 'white',\n              padding: '0.1em 0.3em',\n              textDecoration: 'none',\n              textDecorationColor: 'blue'}} >\n        <ArrowBackIcon />back\n      </Button>\n   </Link>\n  );\n \n  render() {\n    const a = Object.values(this.props.categories);\n    console.log('categornative;render;a=', a);\n    // instead of data={this.state.adata}\n    return (\n      <fieldset>\n        <legend>\n          <Button variant=\"contained\"  \n              onClick={this.context.router.history.goBack}\n              style={{backgroundColor: 'rgb(45,65, 100)',\n              borderRadius: '0.3em',\n              color: 'white',\n              padding: '0.1em 0.3em',\n              textDecoration: 'none',\n              textDecorationColor: 'blue'}} >\n            <ArrowBackIcon />back\n          </Button> &nbsp;pages/categornativejs </legend>\n        <View style={styles.box}>\n          <Text style={styles.text}>if you need section support, use 'SectionList'</Text>\n          <Text style={styles.textunder}>React Native: FlatList with Map()</Text>\n          <FlatList \n            data={a}\n            extraData={this.state}\n            keyExtractor={this._keyextractor}\n            renderItem={({item}) => this._renderitem({item})}\n            ListFooterComponent={this.indicator11}\n          \n          />\n        </View>\n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { fontWeight: 'bold', color: '#ffffff', \n  textDecorationLine: \"underline\" }\n});\nexport default Categornative;\n   // adata: [{key: 'tel aviv'}, {key: 'rishon'}, {key: 'ramat gan'}],\n    // adata: [\n    //   {key: 'tel aviv', id: 'id1', title: 'tel aviv'}, \n    //   {key: 'rishon', id: 'id2', title: 'rishon'}, \n    //   {key: 'ramat gan', id: 'id3', title: 'ramat gan'}],\n    // adata: [\n    //     { _id: 'id1', title: 'tel aviv'}, \n    //     { _id: 'id2', title: 'rishon'}, \n    //     { _id: 'id3', title: 'ramat gan'}],","// from pages/categotnative\nimport React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { fetchlocations1 } from '../actions/loactions';\n\nimport { StyleSheet,  Text, View, \n    FlatList,  TouchableOpacity,\n    ActivityIndicator } from 'react-native';\n// import { any } from '../../node_modules/react-native/flow/Map';\n// import { any } from 'prop-types';\n// import DB2 from '../db2';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitem1 extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    // I don't now why this works\n    //  this.props.onpressitem(this.props._id);\n    this.props.onpressitem(this.props.id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    console.log('choosecatedit;listitem1;render,props=', this.props);\n    return (\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }}>\n            <h3 className=\"navbar\">\n              <Link to={`/cateedit/${this.props.id}`} style={{padding:'0.5em'}} > \n                {this.props.title}</Link>\n            </h3>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nclass Choosecatedit extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('choosecatedit;constructor');\n    this.renderme1 = this.renderme1.bind(this);\n    this._renderitem = this._renderitem.bind(this);\n  }\n  \n  state =  {\n    selected: (new Map(): Map<string, boolean>),\n    // dbcateg: new DB2(),\n    // categories: {}\n  };\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount () {\n    // a is for setstate for categories\n    // const a = await this.state.dbcateg.getcategories();\n    // this.setState({\n    //     categories: a,\n    //     loading: false\n    // });\n  } // didmount\n  _keyextractor = (item, index) => item._id;\n  _onpressitem = (id) => {\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item}) => (\n    <Listitem1\n      id={item._id}\n      onpressitem={this._onpressitem}\n      selected={!!this.state.selected.get(item._id)}\n      title={item.title}\n  />\n  );\n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#0000ff\" animating />)\n    : null\n    ;\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  renderme2 = (\n    <Link to=\"/\" >\n      <Button variant=\"contained\"  style={{backgroundColor: 'rgb(45,65, 100)',\n              borderRadius: '0.3em',\n              color: 'white',\n              padding: '0.1em 0.3em',\n              textDecoration: 'none',\n              textDecorationColor: 'blue'}} >\n        <ArrowBackIcon />back\n      </Button>\n   </Link>\n  );\n \n  render() {\n    const a = Object.values(this.props.categories);\n    console.log('categornative;render;a=', a);\n    // instead of data={this.state.adata}\n    return (\n      <fieldset>\n        <legend>\n          <Button variant=\"contained\"  \n              onClick={this.context.router.history.goBack}\n              style={{backgroundColor: 'rgb(45,65, 100)',\n              borderRadius: '0.3em',\n              color: 'white',\n              padding: '0.1em 0.3em',\n              textDecoration: 'none',\n              textDecorationColor: 'blue'}} >\n            <ArrowBackIcon />back\n          </Button> &nbsp;pages/choosecateditjs </legend>\n        <View style={styles.box}>\n          <Text style={styles.textunder}>React Native: FlatList with Map()</Text>\n          <FlatList \n            data={a}\n            extraData={this.state}\n            keyExtractor={this._keyextractor}\n            renderItem={({item}) => this._renderitem({item})}\n            ListFooterComponent={this.indicator11}\n          \n          />\n        </View>\n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { fontWeight: 'bold', color: '#ffffff', \n  textDecorationLine: \"underline\" }\n});\nexport default Choosecatedit;\n   // adata: [{key: 'tel aviv'}, {key: 'rishon'}, {key: 'ramat gan'}],\n    // adata: [\n    //   {key: 'tel aviv', id: 'id1', title: 'tel aviv'}, \n    //   {key: 'rishon', id: 'id2', title: 'rishon'}, \n    //   {key: 'ramat gan', id: 'id3', title: 'ramat gan'}],\n    // adata: [\n    //     { _id: 'id1', title: 'tel aviv'}, \n    //     { _id: 'id2', title: 'rishon'}, \n    //     { _id: 'id3', title: 'ramat gan'}],","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { StyleSheet, Text, View, SectionList,\n  ActivityIndicator, TouchableOpacity,\n  ScrollView } from 'react-native';\nimport DB2 from '../db2';\nimport DB1 from '../db1';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitemloc extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    console.log('listitemloc;onpress;this.props=', this.props);\n    // this.props.id only not ._id, somehow it works\n    this.props.onpressitem(this.props.id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    // console.log('chooselocedit;listitemloc;render,props=', this.props);\n    return (\n      // className=\"navbar\"\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }} \n              key={this.props.id}>\n            <Text className=\"navbar\">\n              <Link to={`/locedit/${this.props.id}`} \n                 style={{padding:'0.1em 0.7em', \n                 fontWeight: 'bold',\n                 fontSize: '1.16em'}} > \n                {this.props.title}</Link>\n            </Text>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\nclass Chooselocedit extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('chooselocedit;constructor;props=', this.props);\n    this.state =  {\n      dbcat: new DB2(),\n      dbapp: new DB1(),\n      categories: {},\n      notes: {},\n      catsections: [],\n      selected: (new Map(): Map<string, boolean>),\n    }\n    this.sectionsnotes = this.sectionsnotes.bind(this);\n    this.indicator11 = this.indicator11.bind(this);\n    this._renderitem = this._renderitem.bind(this);\n    this._onpressitem = this._onpressitem.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n    const notes = await this.state.dbapp.getallnotes();\n    const categories = await this.state.dbcat.getcategories();\n    const catvalues = Object.values(categories);\n    const notvalues = Object.values(notes);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c12']}\n    ];\n    console.log('chooselocedit;did;catvalues=', catvalues);\n    catvalues.forEach((c) => {\n      const titlehere = c.title;\n      let notesarray = [];\n      notvalues.forEach((n) => {\n        if (c.title === n.category) {\n          notesarray = [...notesarray, n]; // for obj as item\n        }\n      });\n      let obj = {title: titlehere, data: notesarray};\n      searray.push(obj);\n    });\n    \n    this.setState({\n      categories,\n      catsections: searray\n    });\n}\n  \n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#f000ff\" animating />)\n    : null\n    ;\n  sectionsnotes() {\n    const a = Object.values(this.state.categories);\n    // const b = Object.values(this.state.notes);\n    // const b = a.map((c) => c.title);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c']}\n    ];\n    a.forEach((c) => {\n      const titlehere = c.title;\n      console.log('sectionsnotes;title=', titlehere);\n      const arr = c.map((n) => n.title);\n      const obj = {title: c.title, data: arr};\n      searray.push(obj);\n      // console.log('pages/sectionlist;sectionsnotes; newobj=', obj);\n    });\n    return searray;\n  }\n  _onpressitem = (id) => {\n    console.log('chooselocedit;_onpressitem;id=', id);\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item, index}) => {\n    // console.log('chooselocedit;chooselocedit;_renderitem; index=', index);\n    return (\n      <Listitemloc\n        myindex={index}\n        id={item._id}\n        onpressitem={this._onpressitem}\n        selected={!!this.state.selected.get(item._id)}\n        title={item.title}\n    />\n    );\n  } ;\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  render() {\n    return (\n      <fieldset style={{display: 'flex'}}>\n        <legend>\n        <Button variant=\"contained\"  \n            onClick={this.context.router.history.goBack}\n            style={{backgroundColor: 'rgb(45,65, 100)',\n            borderRadius: '0.3em',\n            color: 'white',\n            padding: '0.1em 0.3em',\n            textDecorationLine: 'none'}} >\n          <ArrowBackIcon />back\n        </Button> &nbsp;\n            pages/chooseloceditjs</legend>\n        <View style={styles.box}>\n          <Text style={styles.textunder}>Choose a Location for editing\n          </Text>\n          {/** renderItem={({item}) => this._renderitem({item, index})} \n            before: <Text key={index}>{item}</Text>\n        */}\n        <View style={{flex:1}}>\n          <ScrollView >\n               <SectionList\n                  style={{height: '100em'}}\n                  renderItem={({item, index, section}) => \n                    this._renderitem({item, index})\n                  }\n                  renderSectionHeader={({section: {title}}) => (\n                    <Text style={{\n                        marginBottom: '0.5em',\n                        fontWeight: 'bold', \n                        textDecorationLine: 'underline',\n                        color: 'rgb(199, 213, 237)'}}>\n                      {title}\n                    </Text>\n                  )}\n                  sections={this.state.catsections}\n                  keyExtractor={(item, index) => item + index}\n                />\n          </ScrollView>\n       \n        </View>\n         \n        </View>\n        \n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { \n     fontSize: '1.16em',\n     fontWeight: 'bold',\n     color: '#ffffff',\n     textDecorationLine: \"underline\",\n     marginBottom: '0.5em' }\n});\nexport default Chooselocedit;\n\n/**\n stackoverflow react native\nconstructor(props){\n   super(props);\n   this.onMenuPress = this.onMenuPress.bind(this);\n}\nonMenuPress(item){\n   console.log(item);\n   this.props.navigation.navigate(\"some_route\");\n}\n\nrender() {\n.....some code\n    <ListItem onPress={(item) => this.onMenuPress(item)}>\n....more code\n}\ncatlist\nnotvalues.map((n) =>\n<Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n  );\n */","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n class Catlistedit extends React.Component {\n   constructor(props) {\n     super(props);\n     this.rendernotes = this.rendernotes.bind(this);\n   }\n  rendernotes() {\n    const a1 = Object.values(this.props.notes);\n  return  a1.map((n) => \n      <fieldset key={n._id}>\n        <legend>components/catlisteditjs</legend>\n        <h4 className=\"navbar\">\n          <Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n          </Link>\n        </h4>\n      </fieldset>);\n    \n  }\n   render() {\n     return (\n       <div>\n         { this.rendernotes() }\n       </div>\n     );\n   }\n}\nexport default Catlistedit;","// like ./index.js\n// from pages/showcategory2\nimport React from 'react';\nimport Catlistedit from '../components/catlistedit';\nimport '../App.css';\nimport { StyleSheet,  Text, View } from 'react-native';\n// import { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport {  Link } from 'react-router-dom';\nimport Landscape   from '@material-ui/icons/Landscape';\nimport DB1 from '../db1';\n\nclass Editcat extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('editcat;constructor;props=', this.props);\n    this.mounted = false;\n    this.state =  {\n      note: {\n        _id: '',\n        _rev: '',\n        title: '',\n        createdat: this.props.cat.createdat,\n        uddatedat: new Date()\n      },\n      db1: new DB1(),\n      catnotes: {},\n      loading: true\n    }\n    this.handlesave = this.handlesave.bind(this);\n    this.updatevalue = this.updatevalue.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n    this.mounted = true;\n    // let catlist = await this.state.db1.getcatnotesdb(this.props.cat);\n    const catlist = await this.state.db1.getcategory(this.props.cat);\n    console.log('editcat;did;catlist=', catlist);\n    this.mounted && this.setState({\n      catnotes: catlist,\n      note: this.props.cat,\n      loading: false\n    });\n  }\n  updatevalue = (e) => {\n   // console.log('editcat;update;e.target=', e.target);\n    const { note } = this.state;\n    this.setState({\n      note: { ...note, [e.target.name]: e.target.value }\n    });\n  }\n  handlesave = async (e) => {\n    e.preventDefault();\n   // console.log('editcat;handlesave;e=', e);\n    const notesarray = Object.values(this.state.catnotes);\n    console.log('editcat;handlesave;before notesarray=', notesarray);\n    notesarray.forEach(n => {\n      n.category =  this.state.note.title;\n    });\n    console.log('editcat;handlesave;thisstatenote=', this.state.note);\n    console.log('editcat;handlesave;after notesarray=', notesarray);\n    await this.props.onsaveedit(this.state.note, \n        notesarray);\n    this.props.history.replace(`/sectionlist`);\n  }\n   render() {\n       // const a11 = Object.values(this.state.catnotes);\n       let n = this.state.note;\n       console.log('editcat;render;n=', n);\n       return (\n           <fieldset >\n              <legend>\n              <Button variant=\"contained\"  \n                onClick={this.context.router.history.goBack}\n                style={{backgroundColor: 'rgb(45,65, 100)',\n                borderRadius: '0.3em',\n                color: 'white',\n                padding: '0.1em 0.3em',\n                textDecoration: 'none',\n                textDecorationColor: 'blue'}} >\n                <ArrowBackIcon />back\n              </Button> &nbsp;\n                pages/editcatjs\n              </legend> \n              <h2>Edit Category with Reactjs</h2>\n              <View style={styles.box}>\n                <Text style={styles.text}>\n                  and here is a Insert of Native\n                </Text>\n              </View>\n                 <h2><span style={{fontSize: '0.7em'}}>category:</span>\n                   {this.props.cat.title}</h2>\n                 <form onSubmit={this.handlesave}>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Edit</label>\n                 <input type=\"text\" name=\"title\"  required\n                   autoFocus={true}\n                   placeholder={this.props.cat.title}\n                   value={this.state.note.title}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformbuttons\">\n                  <button className=\"btn\">Save</button>\n                  <Link to=\"/sectionlist\" >\n                    <Button variant=\"contained\"  \n                       style={{backgroundColor: 'rgb(125, 62, 90)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                      <Landscape />Cansel\n                    </Button>\n                  </Link>\n                  \n                </div>\n              </form>\n               <Catlistedit notes={this.state.catnotes} />\n               \n           </fieldset>\n       );\n   }\n}\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff', textAlign: 'center' },\n  textunder: { fontWeight: 'bold', color: '#ffffff', \n  textDecorationLine: \"underline\" }\n});\nexport default Editcat;\n","import React from 'react';\nimport {  Link } from 'react-router-dom';\nimport '../App.css';\nimport DB1 from '../db1';\nimport DB2 from '../db2';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport Landscape   from '@material-ui/icons/Landscape';\n\nclass Editpage extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('editreact;editpage;constructor');\n    this.mounted = false;\n    this.handlesaveedit = this.handlesaveedit.bind(this);\n    this.state = {\n      dbloc: new DB1(),\n      note:  {\n        _id: '',\n        title: '',\n        body: '',\n        alat: '',\n        alng: '',\n        category: '',\n        createdat: this.props.noteloc.createdat,\n        updatedat: new Date(),\n   },\n      dbcateg: new DB2(),\n      categories: {},\n      loading: true\n  }\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n    async componentDidMount() {\n      this.mounted = true;\n      console.log('editreact;did;this.props.noteloc', \n        this.props.noteloc);\n      let onenote = this.props.noteloc;\n      // const a = this.props.noteloc._id;\n      // const onenote = await this.state.dbloc.getnote(a);\n      // console.log('editreact;did;onenote=', onenote);\n      const b = await this.state.dbcateg.getcategories();\n      this.mounted && this.setState({\n          categories: b,\n          note: onenote,\n          loading: false\n      });\n    }\n    componentWillUnmount() {\n      this.mounted = false;\n    }\n    updatevalue = (e) => {\n      const { note } = this.state;\n      this.setState({\n        note: { ...note, [e.target.name]: e.target.value }\n      });\n    }\n    handlesaveedit = async (e) => {\n      let a = this.state.note;\n      console.log('editreact;handlesave')\n      e.preventDefault();\n      console.log('editreactjs;handlesave;note', this.state.note)\n      await this.props.onsaveedit(this.state.note);\n      this.props.history.replace(`/notes/${ a._id }`);\n    }\n    render() {\n        const { note } = this.state;\n        const  loc  = this.props.noteloc;\n        const a = Object.values(this.state.categories);\n        a.sort(function (aaa, bbb) {\n          let textA = aaa.title.toUpperCase();\n          let textB = bbb.title.toUpperCase();\n          return textA.localeCompare(textB);\n        });\n        // const postitems = a.map((n) => n.title);\n        const optioni = a.map(c =>\n          <option key={c._id} value={c.title}>{c.title}</option>\n        );\n        return (\n            <fieldset className=\"noteform\">\n              <legend>\n              <Button variant=\"contained\"  \n                    onClick={this.context.router.history.goBack}\n                    style={{backgroundColor: 'rgb(45,65, 100)',\n                    borderRadius: '0.3em',\n                    color: 'white',\n                    padding: '0.1em 0.3em',\n                    textDecoration: 'none',\n                    textDecorationColor: 'blue'}} >\n                  <ArrowBackIcon />back\n                </Button> &nbsp;\n                pages/editreactjs/Editpage</legend> \n              <h2>Edit Location</h2>\n              <form onSubmit={this.handlesaveedit}>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Name</label>\n                 <input type=\"text\" name=\"title\"  required\n                   placeholder={loc.title}\n                   value={note.title}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield noteformfieldtext\"\n                  style={{display: 'flex',flexDirection: 'row'}} >\n                  <label>Address</label>\n                  <textarea name=\"body\" required\n                    placeholder={loc.body}\n                    value={note.body} \n                    style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                    onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\" \n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Latitude</label>\n                 <input type=\"number\" name=\"alat\" step='any' required\n                   placeholder={loc.alat}\n                   value={note.alat}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\" \n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Longitude</label>\n                 <input type=\"number\" name=\"alng\" step='any' required\n                   placeholder={loc.alng}\n                   value={note.alng}\n                   style={{fontWeight: 'bold', fontSize: '1.1rem'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                  <label>Category</label>\n                \n                  <select required id=\"idcategory\" name=\"category\" \n                    value={note.category}\n                    onChange={this.updatevalue} >\n                     <option value=\"\" >choose an option</option>\n                    {optioni}\n                  </select >\n                </div>\n                <div className=\"noteformbuttons\">\n                  <button className=\"btn\">Save</button>\n                  <Link to=\"/\" >\n                    <Button variant=\"contained\"  \n                       style={{backgroundColor: 'rgb(125, 62, 90)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                      <Landscape />\n                      Cansel\n                    </Button>\n                  </Link>\n                  \n                </div>\n              </form>\n            </fieldset>\n        );\n\n    }\n}\n\nexport default Editpage;\n/**\n  {\n        _id: this.props.noteloc._id,\n        title: this.props.noteloc.title,\n        body: this.props.noteloc.body,\n        alat: this.props.noteloc.alat,\n        alng: this.props.noteloc.alng,\n        category: this.props.noteloc.category,\n        createdat: this.props.noteloc.createdat,\n        updatedat: new Date(),\n   }  \n */","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { StyleSheet, Text, View, SectionList,\n  ActivityIndicator, TouchableOpacity,\n  ScrollView } from 'react-native';\nimport DB2 from '../db2';\nimport DB1 from '../db1';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitemloc extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    this.props.onpressitem(this.props._id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    console.log('chooselocremove;listitem1;render.props.id=', this.props.id);\n    return (\n      // className=\"navbar\"\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }} key={this.props.myindex}>\n            <Text className=\"navbar\">\n              <Link to={`/locremove/${this.props.id}`} \n                 style={{padding:'0.1em 0.7em', \n                 fontWeight: 'bold',\n                 fontSize: '1.16em'}} > \n                {this.props.title}</Link>\n            </Text>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\nclass chooselocremove extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state =  {\n      dbcat: new DB2(),\n      dbapp: new DB1(),\n      categories: {},\n      notes: {},\n      catsections: [],\n      selected: (new Map(): Map<string, boolean>),\n    }\n    this.sectionsnotes = this.sectionsnotes.bind(this);\n    this.indicator11 = this.indicator11.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n    const notes = await this.state.dbapp.getallnotes();\n    const categories = await this.state.dbcat.getcategories();\n    const catvalues = Object.values(categories);\n    const notvalues = Object.values(notes);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c12']}\n    ];\n    console.log('chooselocremove;did;catvalues=', catvalues);\n    catvalues.forEach((c) => {\n      const titlehere = c.title;\n      let notesarray = [];\n      notvalues.forEach((n) => {\n        if (c.title === n.category) {\n          notesarray = [...notesarray, n]; // for obj as item\n        }\n      });\n      let obj = {title: titlehere, data: notesarray};\n      searray.push(obj);\n    });\n    \n    this.setState({\n      categories,\n      catsections: searray\n    });\n}\n  \n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#f000ff\" animating />)\n    : null\n    ;\n  sectionsnotes() {\n    const a = Object.values(this.state.categories);\n    // const b = Object.values(this.state.notes);\n    // const b = a.map((c) => c.title);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c']}\n    ];\n    a.forEach((c) => {\n      const titlehere = c.title;\n      console.log('chooselocremove;title=', titlehere);\n      const arr = c.map((n) => n.title);\n      const obj = {title: c.title, data: arr};\n      searray.push(obj);\n      // console.log('pages/sectionlist;sectionsnotes; newobj=', obj);\n    });\n    return searray;\n  }\n  _onpressitem = (id) => {\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item, index}) => (\n    <Listitemloc\n      myindex={index}\n      id={item._id}\n      onpressitem={this._onpressitem}\n      selected={!!this.state.selected.get(item._id)}\n      title={item.title}\n  />\n  );\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  render() {\n    return (\n      <fieldset style={{display: 'flex'}}>\n        <legend>\n        <Button variant=\"contained\"  \n            onClick={this.context.router.history.goBack}\n            style={{backgroundColor: 'rgb(45,65, 100)',\n            borderRadius: '0.3em',\n            color: 'white',\n            padding: '0.1em 0.3em',\n            textDecorationLine: 'none'}} >\n          <ArrowBackIcon />back\n        </Button> &nbsp;\n            pages/chooselocremovejs</legend>\n        <View style={styles.box}>\n          <Text style={styles.textunder}>Choose a Location for removing\n          </Text>\n          {/** renderItem={({item}) => this._renderitem({item, index})} \n            before: <Text key={index}>{item}</Text>\n          */}\n            <View style={{flex:1}}>\n              <ScrollView >\n                  <SectionList\n                      style={{height: '100em'}}\n                      renderItem={({item, index, section}) => \n                        this._renderitem({item, index})\n                      }\n                      renderSectionHeader={({section: {title}}) => (\n                        <Text style={{\n                            marginBottom: '0.5em',\n                            fontWeight: 'bold', \n                            textDecorationLine: 'underline',\n                            color: 'rgb(199, 213, 237)'}}>\n                          {title}\n                        </Text>\n                      )}\n                      sections={this.state.catsections}\n                      keyExtractor={(item, index) => item + index}\n                    />\n              </ScrollView>\n            </View>\n        </View> \n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { \n     fontSize: '1.16em',\n     fontWeight: 'bold',\n     color: '#ffffff',\n     textDecorationLine: \"underline\",\n     marginBottom: '0.5em' }\n});\nexport default chooselocremove;\n\n/**\n stackoverflow react native\nconstructor(props){\n   super(props);\n   this.onMenuPress = this.onMenuPress.bind(this);\n}\nonMenuPress(item){\n   console.log(item);\n   this.props.navigation.navigate(\"some_route\");\n}\n\nrender() {\n.....some code\n    <ListItem onPress={(item) => this.onMenuPress(item)}>\n....more code\n}\ncatlist\nnotvalues.map((n) =>\n<Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n  );\n  /locremove/${this.props.id}\n */","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\n// import Archive from '@material-ui/icons/Archive';\nimport ListRoundedIcon from '@material-ui/icons/ListRounded';\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\n\nconst styles1 = theme => ({\n  button: {\n      backgroundColor: 'rgb(45, 65, 100)',\n      color: 'white',\n      alignSelf: \"center\",\n      onMouseOver: 'style.backgroundColor = \"green\"'\n  },\n  \n});\n\nclass Footer3 extends React.Component {\n    render ()   {\n      const { classes } = this.props;\n        return (\n          <nav className=\"navfooter navbarbackground\">\n              <legend> navfooter.js</legend> \n              {/* <Link to=\"/categornativemini\" style={{textDecoration: 'none'}}>\n               <Button variant=\"contained\"  style={{backgroundColor: 'rgb(45,65, 100)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em'}} >\n                  <LibraryBooksIcon />Categories:minimum FlatList\n                </Button>\n              </Link> */}\n              <Link to=\"/categories1\" \n                 style={{textDecoration: 'none', marginTop: '0.5em'}}>\n               <Button classes={{ root: classes.button }} >\n                  <LibraryBooksIcon />Categories:minimum FlatList\n                </Button>\n              </Link>\n              <Link to=\"/categornative\" \n                 style={{textDecoration: 'none', marginTop: '0.5em'}}>\n               <Button classes={{ root: classes.button }} >\n                  <LibraryBooksIcon />Categories: FlatList with Map()\n                </Button>\n              </Link>\n              <Link to=\"/\" \n                 style={{textDecoration: 'none', marginTop: '0.5em'}}>\n               <Button classes={{ root: classes.button }} >\n                  <ListRoundedIcon />List of Locations\n                </Button>\n              </Link>\n              <Link to=\"/sectionlist\" \n                 style={{textDecoration: 'none', marginTop: '0.5em'}}>\n               <Button   className={classes.button} >\n                  <LibraryBooksIcon /><ListRoundedIcon />Sectionlist\n                </Button>\n              </Link>\n              {/* <div>Date.now(): {Date.now()}</div> */}\n            </nav>\n        );\n    }\n}\n\nFooter3.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles1)(Footer3);\n// style={{backgroundColor: 'rgb(45,65, 100)',\n//                         borderRadius: '0.3em',\n//                         color: 'white',\n//                         padding: '0.1em 0.3em'}}","export default function getos() {\n    var userAgent = window.navigator.userAgent,\n        platform = window.navigator.platform,\n        macosPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'],\n        windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'],\n        iosPlatforms = ['iPhone', 'iPad', 'iPod'],\n        os = null;\n  \n    if (macosPlatforms.indexOf(platform) !== -1) {\n      os = 'Mac OS';\n    } else if (iosPlatforms.indexOf(platform) !== -1) {\n      os = 'iOS';\n    } else if (windowsPlatforms.indexOf(platform) !== -1) {\n      os = 'Windows';\n    } else if (/Android/.test(userAgent)) {\n      os = 'Android';\n    } else if (!os && /Linux/.test(platform)) {\n      os = 'Linux';\n    }\n    return os;\n  }\n ","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nclass Hellonative extends React.Component {\n  render() {\n    return (\n      <fieldset>\n        <legend>hellonative.js</legend>\n        <View style={styles.box}>\n          <Text style={styles.text}>Hello, world!</Text>\n      </View>\n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { padding: 10 },\n  text: { fontWeight: 'bold' }\n});\nexport default Hellonative;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n class Notelist2 extends React.Component {\n  rendernotes() {\n    const a1 = Object.values(this.props.notes);\n  return  a1.map((n) => \n      <fieldset key={n._id} style={{\n        backgroundColor: 'rgba(88, 110, 88, 0,26)',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n        }}>\n        <legend>components/notelist2js</legend>\n        <div className=\"navbar\">\n          <Link to={`/notes/${n._id}`}\n          style={{fontSize: '1.25em',\n             fontWeight: 'bold'}}\n           > {n.title}</Link>\n        </div>\n      </fieldset>);\n    \n  }\n   render() {\n     return (\n       <div>\n         { this.rendernotes() }\n       </div>\n     );\n   }\n}\nexport default Notelist2;","import React from 'react';\nimport Notelist2 from '../components/notelist2';\nimport '../App.css';\n// import ArrowBackIcon from '@material-ui/icons/ArrowBack';\n// import Button from '@material-ui/core/Button';\n\nexport default class Indexpage extends React.Component {\n    // static contextTypes = {\n    //     router: () => null, // replace with PropTypes.object if you use them\n    //   }\n   render() {\n       const a11 = Object.values(this.props.notes);\n       return (\n           <fieldset className=\"styleindex\">\n               <legend>\n                 {/* is not working\n                 <Button variant=\"contained\"  \n                      onClick={this.context.router.history.goBack}\n                      style={{backgroundColor: 'rgb(45,65, 100)',\n                      borderRadius: '0.3em',\n                      color: 'white',\n                      padding: '0.1em 0.3em',\n                      textDecoration: 'none',\n                      textDecorationColor: 'blue'}} >\n                    <ArrowBackIcon />back\n                 </Button> &nbsp; */}\n                 pages/index.js:notes \n               </legend>\n               <h2>All the Locations</h2>\n               <Notelist2 notes={a11} />\n           </fieldset>\n       );\n   }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\n\nexport default class Navbar2 extends React.Component {\n    render() {\n        return (\n           <nav className=\"navbar navbarbackground\">navbar2.js\n             <h2><Link to=\"/\" style={{background: 'inherit'}}>\n               <Button variant=\"contained\"  style={{backgroundColor: 'rgb(45,65, 100)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                  <HomeIcon />ReactLocations\n                </Button>\n              </Link></h2>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/new\" className=\"btn\">New Location</Link>\n             </div>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/chooselocedit\" className=\"btn\">Edit Location</Link>\n             </div>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/chooselocremove\" className=\"btn\">Remove Location</Link>\n             </div>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/newcategory\" className=\"btn\">New Category</Link>\n             </div>\n             <div className=\"navbarbuttons\">\n               <Link to=\"/choosecatedit\" className=\"btn\">Edit Category</Link>\n             </div>\n           </nav>\n        );\n    }\n}","import React from 'react';\nimport {  Link } from 'react-router-dom';\nimport '../App.css';\nimport Button from '@material-ui/core/Button';\nimport Landscape   from '@material-ui/icons/Landscape';\n\n class Newcategory extends React.Component {\n     constructor(props) {\n        super(props);\n        this.state = {\n            note: {\n              title: '',\n              createdat: undefined,\n              updatedat: undefined\n            }\n        }\n        this.handlesave = this.handlesave.bind(this);\n        this.updatevalue = this.updatevalue.bind(this);\n     }\n    updatevalue = (e) => {\n      const { note } = this.state;\n      this.setState({\n        note: { ...note, [e.target.name]: e.target.value }\n      });\n    }\n    handlesave = async (e) => {\n      e.preventDefault();\n      const id = await this.props.onsave(this.state.note);\n      this.props.history.replace(`/categories/${ id }`);\n    }\n    render() {\n        // const { note } = this.state;\n       \n        return (\n            <fieldset className=\"noteform\">\n              <legend>pages/newcategoryjs</legend> \n              <h2>New Category</h2>\n              <form onSubmit={this.handlesave}>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Name</label>\n                 <input type=\"text\" name=\"title\"  required\n                   placeholder=\"Name\"\n                   value={this.state.note.title}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformbuttons\">\n                  <button className=\"btn\">Save</button>\n                  <Link to=\"/\" >\n                    <Button variant=\"contained\"  \n                       style={{backgroundColor: 'rgb(125, 62, 90)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                      <Landscape />\n                      Cansel\n                    </Button>\n                  </Link>\n                  \n                </div>\n              </form>\n            </fieldset>\n        );\n\n    }\n}\n\nexport default Newcategory;","import React from 'react';\nimport {  Link } from 'react-router-dom';\nimport '../index.css';\nimport Button from '@material-ui/core/Button';\nimport Landscape   from '@material-ui/icons/Landscape';\nimport DB2 from '../db2';\n\nclass Newlocation extends React.Component {\n  constructor(props) {\n      super(props);\n      this.mounted = false;\n      this.state = {\n        note: {\n          title: '',\n          body: '',\n          alat: '',\n          alng: '',\n          category: undefined,\n          createdat: undefined,\n          updatedat: undefined,\n          _id: ''\n        },\n        dbcateg: new DB2(),\n        categories: {},\n        loading: true\n      }\n    this.updatevalue = this.updatevalue.bind(this);\n    this.handlesave = this.handlesave.bind(this);\n  }\n \n  async componentDidMount () {\n    this.mounted = true;\n    const a = await this.state.dbcateg.getcategories();\n    this.mounted && this.setState({\n        categories: a,\n        loading: false\n    });\n  } // didmount\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n    updatevaluetitle = (e) => {\n      const { note } = this.state;\n      // const id1 = e.target.value + Date.now();\n      this.setState({\n        ...note,\n        [e.target.name]: e.target.value,\n        _id: e.target.value \n      });\n    }\n    updatevalue = (e) => {\n      const { note } = this.state;\n      this.setState({\n        note: { ...note, [e.target.name]: e.target.value }\n      });\n    }\n    handlesave = async (e) => {\n      e.preventDefault();\n      const id = await this.props.onsave(this.state.note);\n      this.props.history.replace(`/notes/${ id }`);\n    }\n    render() {\n        const { note } = this.state;\n        const a = Object.values(this.state.categories);\n        a.sort(function (aaa, bbb) {\n          let textA = aaa.title.toUpperCase();\n          let textB = bbb.title.toUpperCase();\n          return textA.localeCompare(textB);\n        });\n        // const postitems = a.map((n) => n.title);\n        const optioni = a.map(c =>\n          <option key={c._id} value={c.title}>{c.title}</option>\n        );\n        return (\n            <fieldset className=\"noteform\">\n              <legend>newlocationjs</legend> \n              <h2>Add Location</h2>\n              <form onSubmit={this.handlesave}>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Name</label>\n                 <input type=\"text\" name=\"title\"  required\n                   placeholder=\"Name\"\n                   value={note.title}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield noteformfieldtext\"\n                  style={{display: 'flex',flexDirection: 'row'}} >\n                  <label>Address</label>\n                  <textarea name=\"body\" required\n                    placeholder=\"Address\"\n                    value={note.body} \n                    style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                    onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\" \n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Latitude</label>\n                 <input type=\"number\" name=\"alat\" step='any' required\n                   placeholder=\"Latitude\"\n                   value={note.alat}\n                   style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\" \n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                 <label>Longitude</label>\n                 <input type=\"number\" name=\"alng\" step='any' required\n                   placeholder=\"Longitude\"\n                   value={note.alng}\n                   style={{fontWeight: 'bold', fontSize: '1.1rem'}}\n                   onChange={this.updatevalue} />\n                </div>\n                <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n                  <label>Category</label>\n                  <select required id=\"idcategory\" name=\"category\" \n                    value={note.category}\n                    onChange={this.updatevalue} >\n                     <option value=\"\" >choose an option</option>\n                    {optioni}\n                  </select >\n                </div>\n                <div className=\"noteformbuttons\">\n                  <button className=\"btn\">Save</button>\n                  <Link to=\"/\" >\n                    <Button variant=\"contained\"  \n                       style={{backgroundColor: 'rgb(125, 62, 90)',\n                        borderRadius: '0.3em',\n                        color: 'white',\n                        padding: '0.1em 0.3em',\n                        textDecoration: 'none'}} >\n                      <Landscape />\n                      Cansel\n                    </Button>\n                  </Link>\n                  \n                </div>\n              </form>\n            </fieldset>\n        );\n\n    }\n}\nexport default Newlocation;\n\n/**\n  <option value=\"\" >choose an option</option>\n  <option value=\"tel aviv\" >Tel Aviv</option>\n  <option value=\"shopping\" >shopping</option>\n  <option value=\"shaping\" >shaping</option>\n  <option value=\"rishon leZion\">Rishon leZion</option>\n */","// to update the internal state as the result of a change in props\n// lifecycle componentWillReceiveProps was the only way  to update state\n// in response to a change in props without an additional render. \n// Since 16.3, a replacement lifecycle getDerivedStateFromProps, \n// solves the same case in a safer way.\n// getDerivedStateFromProps is invoked after a component is instatiated\n// as well as before it is re-rendered.It can return an object to update\n// state, or null to indicate that the new props do not require any state\n// udates.\n// When an instance is being created and inserted into the DOM:\n// constructor()\n// static getDerivedStateFromProps()\n// render()\n// componentDidMount()\n// When props is changed:These methods are called:\n// static getDerivedStateFromProps()\n// shouldComponentUpdate()\n// render()\n// getSnapshotBeforeUpdate()\n// componentDidUpdate()\n\nimport React from 'react';\nimport {  Link } from 'react-router-dom';\nimport '../App.css';\n// import DB1 from '../db1';\n// import DB2 from '../db2';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport Landscape   from '@material-ui/icons/Landscape';\n\nclass Removepage2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mounted: false,\n      dbchanges: {},\n      note:  '',\n      after: false,\n      titletoremove: ''\n      //  , dbcateg: new DB2(),\n      //   categories: {},\n      //   loading: true\n    }\n    localStorage.setItem('afterremove', '0');\n    this.handleremove = this.handleremove.bind(this);\n    this.gracerfulunmount = this.gracerfulunmount.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  gracerfulunmount(){\n    this.setState({mounted: false});\n    window.removeEventListener('beforeunload', \n      this.gracerfulunmount);\n    console.log('remove2;graceful;before history.replace');\n    this.props.history.replace('/sectionlist');\n  }\n  \n  static getDerivedStateFromProps(props, state) {\n    console.log('remove2;getderivedstate;props', props);\n    if (props.noteloc !== undefined) { \n      console.log('remove2;derived;props.noteloc=', props.noteloc);\n      localStorage.setItem('derivednull', 'false');\n      return props;\n    }else { \n      localStorage.setItem('derivednull', 'true');\n      return null; }\n  } \n\n \n    async componentDidMount() {\n      window.addEventListener('beforeunload', this.gracerfulunmount);\n      \n      }\n    \n    componentWillUnmount() {\n      this.setState({ mounted : false });\n      this.gracerfulunmount();\n      // avoid here \n   \n    }\n    equals(a, b) {\n    if  (a.noteloc === b.noteloc) { return true; }\n    else { return false; }\n    }\n  //   shouldComponentUpdate(nextProps, nextState){\n  //  // equals() is your implementation\n  //     return !equals(nextProps, this.props); \n  //  }\n    shouldComponentUpdate(nextProps, nextState) {\n      // render() will not be invoked if it returns false.\n      // if (this.state.note === '') {return true; }\n      let a = false;\n       if (nextProps.noteloc.title !== this.props.noteloc.title){ a = true; }\n       else { this.props.history.replace('/sectionlist'); }\n      return a;\n    }\n    componentDidUpdate() {\n      if(this.state.after) {\n        // this.state.dbchanges.cansel();\n        this.props.history.replace('/sectionlist');\n      } else {\n        this.setState({\n          after: true\n        });\n      }\n    }\n    handleremove = async (e) => {      \n      e.preventDefault();\n      let a = localStorage.getItem('afterremove');\n      console.log('remove2;handle;afterremove=', a);\n      if (a === '0') {\n        const anote = this.props.noteloc;\n        console.log('remove2;handleremove;note', anote)\n        const yes = await this.props.onremove(anote);\n        console.log('remove2;handleremove;yes=', yes);\n        localStorage.setItem('afterremove', '1');\n        await this.setState({ after: true });\n        this.props.history.replace('/sectionlist');\n      } else {\n        this.props.history.replace('/sectionlist');\n      }\n    \n    }\n    render() {\n      // const anote = this.state.note;\n      let a = localStorage.getItem('derivednull');\n      if (a === 'true') { \n        this.props.history.replace('/sectionlist'); \n        return (  <h2>Location was removed</h2> );\n      }\n      else {\n        const anote = this.props.noteloc;\n        console.log('remove2;render;anote=', anote);\n        return (\n          <fieldset className=\"noteform\">\n            <legend>\n            <Button variant=\"contained\"  \n                  onClick={this.context.router.history.goBack}\n                  style={{backgroundColor: 'rgb(45,65, 100)',\n                  borderRadius: '0.3em',\n                  color: 'white',\n                  padding: '0.1em 0.3em',\n                  textDecoration: 'none',\n                  textDecorationColor: 'blue'}} >\n                <ArrowBackIcon />back\n              </Button> &nbsp;\n              pages/remove2js/Removepage2</legend> \n            <h2>Remove Location</h2>\n            <form onSubmit={this.handleremove}>\n              <div className=\"noteformfield\"\n                  style={{display: 'flex',flexDirection: 'row', \n                  alignItems: 'center'}}>\n                <label>Name</label>\n                <input type=\"text\" name=\"title\"  \n                readOnly={true}\n                placeholder={anote.title}\n                value={anote.title}\n                style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                />\n              </div>\n              <div className=\"noteformfield noteformfieldtext\"\n                style={{display: 'flex',flexDirection: 'row'}} >\n                <label>Address</label>\n                <textarea name=\"body\" \n                  readOnly={true}\n                  placeholder={anote.body}\n                  value={anote.body} \n                  style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                  />\n              </div>\n              <div className=\"noteformfield\" \n                style={{display: 'flex',flexDirection: 'row', alignItems: 'center'}}>\n               <label>Latitude</label>\n               <input type=\"number\" name=\"alat\" step='any' \n                 readOnly={true}\n                 placeholder={anote.alat}\n                 value={anote.alat}\n                 style={{fontWeight: 'bold', fontSize: '1.1em'}}\n                 />\n              </div>\n              <div className=\"noteformfield\" \n                style={{display: 'flex',flexDirection: 'row', \n                alignItems: 'center'}}>\n               <label>Longitude</label>\n               <input type=\"number\" name=\"alng\" step='any'\n                 readOnly={true} \n                 placeholder={anote.alng}\n                 value={anote.alng}\n                 style={{fontWeight: 'bold', fontSize: '1.1rem'}}\n                 />\n              </div>\n              <div className=\"noteformfield\"\n                style={{display: 'flex',flexDirection: 'row', \n                alignItems: 'center'}}>\n                <label>Category</label>\n              \n                <select id=\"idcategory\" name=\"category\" >\n                   <option value=\"\" >{anote.category}</option>\n                </select >\n              </div>\n              <div className=\"noteformbuttons\">\n                <button className=\"btn\">Remove</button>\n                <Link to=\"/sectionlist\" >\n                  <Button variant=\"contained\"  \n                     style={{backgroundColor: 'rgb(125, 62, 90)',\n                      borderRadius: '0.3em',\n                      color: 'white',\n                      padding: '0.1em 0.3em',\n                      textDecoration: 'none'}} >\n                    <Landscape />\n                    Cansel\n                  </Button>\n                </Link>\n                \n              </div>\n            </form>\n          </fieldset>\n      );// return\n      }\n      \n    }\n}\n\nexport default Removepage2;\n/**\n  {\n        _id: this.props.noteloc._id,\n        title: this.props.noteloc.title,\n        body: this.props.noteloc.body,\n        alat: this.props.noteloc.alat,\n        alng: this.props.noteloc.alng,\n        category: this.props.noteloc.category,\n        createdat: this.props.noteloc.createdat,\n        updatedat: new Date(),\n   }  \n      <select id=\"idcategory\" name=\"category\" \n                    value={note.category} >\n         <option value=\"\" >choose an option</option>\n      </select > \n */","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { StyleSheet, Text, View, SectionList, ScrollView,\n  ActivityIndicator, TouchableOpacity } from 'react-native';\n// import { any } from 'prop-types';\nimport DB2 from '../db2';\nimport DB1 from '../db1';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\n\nclass Listitemloc extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onpress = this.onpress.bind(this);\n  }\n  onpress = () => {\n    this.props.onpressitem(this.props._id);\n  }\n  render() {\n    const textcolor = this.props.selected ? \"red\" : \"black\";\n    console.log('categornative;listitem1;render,props=', this.props);\n    return (\n      // className=\"navbar\"\n      <TouchableOpacity onPress={this.onpress}>\n        <View>\n          <Text style={{ color: textcolor }} key={this.props.myindex}>\n            <Text className=\"navbar\">\n              <Link to={`/notes/${this.props.id}`} \n                 style={{padding:'0.1em 0.7em', \n                 fontWeight: 'bold',\n                 fontSize: '1.16em'}} > \n                {this.props.title}</Link>\n            </Text>\n            \n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\nclass Sectionlist12 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state =  {\n      dbcat: new DB2(),\n      dbapp: new DB1(),\n      categories: {},\n      notes: {},\n      catsections: [],\n      selected: (new Map(): Map<string, boolean>),\n    }\n    this.sectionsnotes = this.sectionsnotes.bind(this);\n    this.indicator11 = this.indicator11.bind(this);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n    const notes = await this.state.dbapp.getallnotes();\n    const categories = await this.state.dbcat.getcategories();\n    const catvalues = Object.values(categories);\n    const notvalues = Object.values(notes);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c12']}\n    ];\n    console.log('section;did;values=', catvalues);\n    catvalues.forEach((c) => {\n      const titlehere = c.title;\n      // console.log('sectionlist;did;c.title', c.title);\n      let notesarray = [];\n      notvalues.forEach((n) => {\n        // console.log('sectionlist;did;n.category=', n.category);\n        if (c.title === n.category) {\n  // notesarray = [...notesarray, n.title]; for plain text item\n          notesarray = [...notesarray, n]; // for obj as item\n        }\n      });\n      let obj = {title: titlehere, data: notesarray};\n      searray.push(obj);\n    });\n    \n     // const a = this.state.catsections.concat(this.sectionsnotes());\n    this.setState({\n      categories,\n      catsections: searray\n    });\n}\n  \n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"#f000ff\" animating />)\n    : null\n    ;\n  sectionsnotes() {\n    const a = Object.values(this.state.categories);\n    // const b = Object.values(this.state.notes);\n    // const b = a.map((c) => c.title);\n    let searray = [\n      // {title: 'section11', data: ['a11', 'b11', 'c11']},\n      // {title: 'section12', data: ['a12', 'b12', 'c']}\n    ];\n    a.forEach((c) => {\n      const titlehere = c.title;\n      console.log('sectionsnotes;title=', titlehere);\n      const arr = c.map((n) => n.title);\n      const obj = {title: c.title, data: arr};\n      searray.push(obj);\n      // console.log('pages/sectionlist;sectionsnotes; newobj=', obj);\n    });\n    return searray;\n  }\n  _onpressitem = (id) => {\n    // updater functions are preferred for transactional updates\n    this.setState((state) => {\n      // copy the map rather than modifying state\n      const selected = new Map(state.selected);\n      selected.set(id, !selected.get(id)); // toggle\n      return {selected};\n    })\n  };\n  _renderitem = ({item, index}) => (\n    <Listitemloc\n      myindex={index}\n      id={item._id}\n      onpressitem={this._onpressitem}\n      selected={!!this.state.selected.get(item._id)}\n      title={item.title}\n  />\n  );\n  renderme1 = (text1) => (<Text>{text1}</Text>);\n  render() {\n    return (\n      <fieldset>\n        <legend>\n        <Button variant=\"contained\"  \n            onClick={this.context.router.history.goBack}\n            style={{backgroundColor: 'rgb(45,65, 100)',\n            borderRadius: '0.3em',\n            color: 'white',\n            padding: '0.1em 0.3em',\n            textDecorationLine: 'none'}} >\n          <ArrowBackIcon />back\n        </Button> &nbsp;\n            pages/sectionlist12.js</legend>\n        <View style={styles.box}>\n          <Text>React Native Style</Text>\n          <Text style={styles.textunder}>Locations by Categories\n          </Text>\n          {/** renderItem={({item}) => this._renderitem({item, index})} \n            before: <Text key={index}>{item}</Text>\n        */}\n          <View style={styles.container}>\n            <ScrollView>\n              <SectionList\n                style={{height: '100em'}}\n                renderItem={({item, index, section}) => \n                  this._renderitem({item, index})\n                }\n                renderSectionHeader={({section: {title}}) => (\n                  <Text style={{\n                      marginBottom: '0.5em',\n                      fontWeight: 'bold', \n                      textDecorationLine: 'underline',\n                      color: 'rgb(199, 213, 237)'}}>\n                    {title}\n                  </Text>\n                )}\n                sections={this.state.catsections}\n                keyExtractor={(item, index) => item + index}\n              />\n            </ScrollView>\n\n            \n          </View>\n          \n        </View>\n        \n      </fieldset>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { fontSize: '1.16em',\n    fontWeight: 'bold',\n    color: '#ffffff',\n    textDecorationLine: \"underline\",\n    marginBottom: '0.5em'},\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    height: 'auto'\n  }\n  });\nexport default Sectionlist12;\n\n/**\n stackoverflow react native\nconstructor(props){\n   super(props);\n   this.onMenuPress = this.onMenuPress.bind(this);\n}\nonMenuPress(item){\n   console.log(item);\n   this.props.navigation.navigate(\"some_route\");\n}\n\nrender() {\n.....some code\n    <ListItem onPress={(item) => this.onMenuPress(item)}>\n....more code\n}\ncatlist\nnotvalues.map((n) =>\n<Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n  );\n  scrollEnabled={true}\n */","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import shouldPureComponentUpdate from 'react-pure-render/function';\nimport GoogleMapReact from 'google-map-react';\n// import Myplace from './myplace.js';\n\nconst Mymapcomponent = ({text}) => <div>{text}</div>;\n\nclass Googlemapreact extends Component {\n    static defaultProps = {\n        center: {\n            lat: '32.08',\n            lng: '34.78'\n        },\n        zoom: 17\n    };\n    render () {\n        const alat = parseFloat(this.props.alat);\n        const alng = parseFloat(this.props.alng);\n        const azoom = 17;\n\n        return (\n            // set the container height explicity\n            <div style={{ height: '50vh', width: '50%' }}>\n              <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyB_ZSdzmuDdhVLlTNypKYS7tuG_xns6IVU' }}\n                defaultCenter={[alat,alng]}\n                defaultZoom={azoom}\n              >\n                <Mymapcomponent \n                   lat={alat}\n                   lng={alng}\n                   text={'here'}\n                />\n              </GoogleMapReact>\n            </div>\n        );\n    }\n}\nexport default Googlemapreact;\n// defaultCenter={this.props.center}\n","import React from 'react';\nimport '../App.css';\n// import { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport Googlemapreact from '../googlemapreact/googlemapreact';\nimport { Vibration } from 'react-native';\n\n class Showpage extends React.Component {\n   constructor(props) {\n     super(props);\n     this.fvibration = this.fvibration.bind(this);\n   }\n   static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n    fvibration() {\n        const DURATION = 1000\n        // const PATTERN = [1000, 2000, 3000]\n        \n        Vibration.vibrate(DURATION)\n        // Android: vibrate for 1s\n        // iOS: duration is not configurable, vibrate for fixed time (about 500ms)\n        // Vibration.vibrate(PATTERN)\n        // Android: wait 1s -> vibrate 2s -> wait 3s\n        // iOS: wait 1s -> vibrate -> wait 2s -> vibrate -> wait 3s -> vibrate\n        Vibration.cancel()\n        \n    }\n  \n    render() {\n        this.fvibration();\n        const { note } = this.props;\n        if (!note) { return null; }\n        return (\n            <fieldset style={{width: '80vw'}}>\n              <legend>\n              <Button variant=\"contained\"  \n                    onClick={this.context.router.history.goBack}\n                    style={{backgroundColor: 'rgb(45,65, 100)',\n                    borderRadius: '0.3em',\n                    color: 'white',\n                    padding: '0.1em 0.3em',\n                    textDecoration: 'none',\n                    textDecorationColor: 'blue'}} >\n                  <ArrowBackIcon />back\n                </Button> &nbsp;showjs:Showpage\n              </legend> \n              <div >\n                  <div>\n                    <h2>{ note.title }</h2>\n                    <div>address:{ note.body } </div>\n                    <div>coordinates:{note.alat},{note.alng}</div>\n                    <div>category:{ note.category }</div>\n                    <div>date: { note.updatedat.toString() }</div>\n                  </div>\n                  <div>\n                    <Googlemapreact \n                      alat={note.alat} alng={note.alng}/>\n                  </div>\n              </div>\n               \n            </fieldset>\n        );\n\n    }\n}\nexport default Showpage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n class Catlist extends React.Component {\n   constructor(props) {\n     super(props);\n     this.rendernotes = this.rendernotes.bind(this);\n   }\n  rendernotes() {\n    const a1 = Object.values(this.props.notes);\n  return  a1.map((n) => \n      <fieldset key={n._id}>\n        <legend>components/catlistjs</legend>\n        <h4 className=\"navbar\">\n          <Link style={{padding: '0.3em 0.8em 0.3em 0.8em '}}\n            to={`/notes/${n._id}`} > {n.title}\n          </Link>\n        </h4>\n      </fieldset>);\n    \n  }\n   render() {\n     return (\n       <div>\n         { this.rendernotes() }\n       </div>\n     );\n   }\n}\nexport default Catlist;","// like ./index.js\nimport React from 'react';\nimport Catlist from '../components/catlist';\nimport '../App.css';\nimport { StyleSheet,  Text, View } from 'react-native';\n// import { Link } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Button from '@material-ui/core/Button';\nimport DB1 from '../db1';\n\nclass Showcategory2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state =  {\n      db1: new DB1(),\n      catnotes: {},\n      loading: true\n    }\n    console.log('showcategory2js;props', props);\n  }\n  static contextTypes = {\n    router: () => null, // replace with PropTypes.object if you use them\n  }\n  async componentDidMount() {\n      const catnotes = await this.state.db1.getcategory(this.props.cat);\n     // const catnotes = await this.state.db1.getcatnotesdb(this.props.cat);\n    this.setState({\n      catnotes,\n      loading: false\n    });\n  }\n  \n   render() {\n       // const a11 = Object.values(this.state.catnotes);\n       return (\n           <fieldset >\n              <legend>\n              <Button variant=\"contained\"  \n                onClick={this.context.router.history.goBack}\n                style={{backgroundColor: 'rgb(45,65, 100)',\n                borderRadius: '0.3em',\n                color: 'white',\n                padding: '0.1em 0.3em',\n                textDecoration: 'none',\n                textDecorationColor: 'blue'}} >\n                <ArrowBackIcon />back\n              </Button> &nbsp;\n                pages/showcategory2js\n              </legend> \n              <View style={styles.box}>\n                <Text style={styles.textunder}>\n                  plain React with Native insert \n                </Text>\n              </View>\n                 <h2><span style={{fontSize: '0.7em'}}>category:</span>{this.props.cat.title}</h2>\n               <Catlist notes={this.state.catnotes} />\n           </fieldset>\n       );\n   }\n}\nconst styles = StyleSheet.create({\n  box: { \n      borderRadius: '0.3em',\n      padding: 10,\n      backgroundColor: 'rgba(125, 125, 100, 0.88)'\n      },\n  text: { fontWeight: 'bold', color: '#ffffff' },\n  textunder: { fontWeight: 'bold', color: '#ffffff', \n  textDecorationLine: \"underline\" }\n});\nexport default Showcategory2;\n","// all the acions are commited\nimport { FETCH_LOCS, NEW_LOC, EDIT_LOC } from '../actions/types';\n\nconst initialstate = {\n    items: [], // represents posts from actions\n    item1: {}  // new added\n};\n// fun evaluates what type, that we're dealing with\nexport default function (state = initialstate, action1) {\n    switch (action1.type) { // calls to action files\n      case FETCH_LOCS: {\n          console.log('loreducer;fetch locations');\n          return {\n              ...state,\n              items: action1.payload // myload\n     // from loaction data within fetch\n          };\n         //  break;\n      }\n      case NEW_LOC: {\n        console.log('loreducer;new');\n        return {\n            ...state,\n            item1: action1.payload // myload\n        };\n        // break;\n      }\n      case EDIT_LOC: {\n        console.log('loreducer;edit');\n        return {\n            ...state,\n            item1: action1.payload // myload\n        };\n       // break;\n      }\n      default: return state;\n    }\n};","// import { FETCH_CA, NEW_POST } from '../actions/types';\n\nconst initialstate = {\n    items: [],\n    item: {}\n}\n\nexport default function(state = initialstate, action) {\n    switch(action.type) {\n        default:\n          return state;\n    }\n}","// rootreducer\nimport { combineReducers } from 'redux';\n// postreducer within reactexpress`\nimport loreducer from './loreducer'; \nimport categoryreducer from './categoryreducer';\n\nexport default combineReducers ({\n// was rootposts  within reactexpress\n    rootlocations: loreducer,  // that is what we send to \n// to appjs within state.rootposts\n// at last we want items from loreducer\n    categories: categoryreducer\n   \n});","import { createStore, applyMiddleware }  from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootreducer from './reducers'; \n\nconst initialstate = {};\n// const middleware1 = [thunk];\nconst middleware = [thunk];\n\nconst store = createStore(\n\t\t\trootreducer, \n\t\t\tinitialstate, \n\t\t\tapplyMiddleware(thunk)\n\t\t\t// applyMiddleware(...middleware)\n    );\n\nexport default store;","// npm start\nimport React, { Component } from 'react';\nimport './App.css';\n// import PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchlocations1 } from './actions/loaction';\n\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { StyleSheet, Text, View,\n  ActivityIndicator} from 'react-native';\nimport Categories1 from './components/categories1';\nimport Categornative from './pages/categornative';\nimport Choosecatedit from './pages/choosecatedit';\nimport Chooselocedit from './pages/chooselocedit';\nimport DB1 from './db1';\nimport DB2 from './db2';\nimport Editcat from './pages/editcat';\nimport Editpage from './pages/editreact';\nimport Chooselocremove from './pages/chooselocremove';\n// import Footer2 from './components/footer2';\nimport Footer3 from './components/footer3';\nimport getos from './components/getos';\nimport Hellonative from './components/hellonative';\n// import Categornativemini from './pages/categornativemini';\nimport Indexpage from './pages/index';\nimport Navbar2 from './components/navbar2';\n// import Navbar3 from './components/navbar3';\nimport Newcategory from './pages/newcategory';\nimport Newlocation from './pages/newlocation';\nimport Removepage2 from './pages/remove2';\nimport Sectionlist12 from './pages/sectionlist12';\nimport Showpage from './pages/show';\n// import Showcategory1 from './pages/showcategory1';\nimport Showcategory2 from './pages/showcategory2';\n import store from './store';\n\n // import { createStore, applyMiddleware } from 'redux';\n // const store = createStore(() => [], {},  applyMiddleware);\nconst stylesnative = StyleSheet.create({\n  box: { \n    width: '80%',\n    padding: '0.35em', \n    marginTop: '5.26em',\n    marginBottom: '0.26em',\n    backgroundColor: 'rgba(100, 116, 80, 0.7)',\n    borderRadius: '0.26em' },\n  text: { \n    textAlign: 'center',\n    fontWeight: 'bold', \n    fontSize: '1.7rem',\n    color: 'white' \n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleremove = this.handleremove.bind(this);\n  }\n  state =  {\n    dbapp: new DB1(),\n    dbcat: new DB2(),\n    notes: {},\n    categories: {},\n    catnotes: {},\n    loading: true,\n    aos: ''\n  }\n  async componentDidMount() {\n    let myos = getos();\n    console.log('app;did;os=', myos);\n    const mynotes = await this.state.dbapp.getallnotes();\n    // // console.log('app;did;notes.keys=', Object.keys(mynotes));\n    // console.log('app;did;notes=', mynotes);\n     // this.props.fetchlocations1();\n    const categories = await this.state.dbcat.getcategories();\n  this.setState({\n    notes: mynotes,\n    categories,\n    loading: false,\n    aos: myos\n});\n}\n\n// componentWillReceiveProps(nextProps) {\n//   if(nextProps.newpost) {\n//     this.props.posts.unshift(nextProps.newpost);\n//   }\n// }\n \n  handlesave = async (note) => {\n    let { id } = await this.state.dbapp.createnote(note);\n  // let res = await this.state.dbapp.create(note);\n  // let { id } = res;\n    const { notes } = this.state;\n    this.setState({\n      notes: {\n        ...notes,\n        [id]: note\n      }\n    });\n    return id;\n  }\n  handlesaveedit = async (note) => {\n    let { id } = await this.state.dbapp.editnote(note);\n    const { notes } = this.state;\n    console.log('app;handglesaveedit;notes before set=', notes);\n    this.setState({\n      notes: {\n        ...notes,\n        [id]: note\n      }\n    });\n  }\n  handleremove = async (note) => {\n    let lenkeys = Object.keys(this.state.notes).length;\n    console.log('app;handleremove;length of keys=', lenkeys);\n    console.log('app;handleremove;note._id=', note._id);\n    await this.state.dbapp.removenote(note);\n    /**\n     \n     let newnotes = this.state.notes.filter(m => \n      { \n        console.log('app;handleremove;m.key=', Object.keys(m), ';note._id=', note._id);\n        return Object.keys(m) !== note._id })\n\nvar countriesFiltered = Object.keys(countries)\n    .filter(function(key) { return countries[key] <= 1000000000;})\n    .map(function(key) { return countries[key];});\n\n        const prop = 'color'\nconst newCar = Object.keys(car)\n  .reduce((object, key) => { if (key !== prop) { object[key] = car[key] }\n    return object\n  }, {})\n  let i11 = 0;\n  for (var foo in notes) {\n    if (i11===0 && notes.hasOwnProperty(foo) && notes[foo] == note)\n    { \n      i11 = 1;\n      delete.notes[foo]; // mutable\n     }\n  }\n     */ \n    const a = note._id;\n    const b = this.state.notes;\n    const renotes = Object.keys(b)\n      .reduce((object, key) => {\n        if (key !== a) { object[key] = b[key] } \n        return object;\n      }, {});\n      lenkeys = Object.keys(renotes).length;\n      console.log('app;handleremove;length renotes keys=', lenkeys);\n    this.setState({\n      notes: renotes\n    });\n    console.log('app;handleremove;props=', this.props);\n    // this.props.history.replace('/sectionlist');\n  }\n  getcatnotesap = async (c) => {\n    const catnotes = await this.state.dbapp.getcatnotesdb(c);\n    this.setState({\n      catnotes,\n      loading: false\n  });\n  };\n  handlesavecategory = async (c) => {\n    let { id } = await this.state.dbcat.createcategory(c);\n    const { categories } = this.state;\n    this.setState({\n      categories: {\n        ...categories,\n        [id]: c\n      }\n    });\n    return id;\n  }\n  handlesaveeditcat = async (c, array) => {\n    console.log('app;handlesaveeditcat;c = ', c);\n    console.log('app;handlesaveeditcat;array = ', array);\n    await this.state.dbcat.editcat(c); // response of put\n    const categories = await this.state.dbcat.getcategories();\n    await this.state.dbapp.editarray(array);\n    const notes = await this.state.dbapp.getallnotes();\n    // console.log('app;did;notes.keys=', Object.keys(notes));\n    console.log('app;did;notes=', notes);\n    \n  this.setState({\n    notes,\n    categories,\n    loading: false\n});\n  }\n  rendercontent() {\n    if (this.state.loading) { \n      return <h2>\n        <ActivityIndicator size=\"large\" \n          color=\"rgb(135, 125, 100)\" animating />\n      </h2> }\n    return (\n      <div className=\"appcontent\">\n        <Route exact path=\"/\"  component={(props) => \n            <Indexpage {...props} notes={this.state.notes}/>} />\n        <Route exact path=\"/notes/:id\" component={(props) => \n            <Showpage {...props} \n              note={this.state.notes[props.match.params.id]} />} />\n        <Route exact path=\"/new\" component={(props) => \n            <Newlocation {...props} onsave={this.handlesave}/>} />\n        <Route exact path=\"/newcategory\" component={(props) => \n            <Newcategory {...props} onsave={this.handlesavecategory} /> } />\n        <Route exact path=\"/choosecatedit\" component={(props) => \n            <Choosecatedit {...props} categories={this.state.categories} />} />\n        <Route exact path=\"/chooselocedit\" component={(props) => \n            <Chooselocedit {...props} notes={this.state.notes} />} />\n        <Route exact path=\"/chooselocremove\" component={(props) => \n            <Chooselocremove {...props} notes={this.state.notes} />} />\n        <Route exact path=\"/locedit/:id\" component={(props) => \n            <Editpage {...props} onsaveedit={this.handlesaveedit}\n              noteloc={this.state.notes[props.match.params.id]}/>} />\n        <Route exact path=\"/cateedit/:id\" component={(props) => \n            <Editcat {...props} \n            cat={this.state.categories[props.match.params.id]}\n            onsaveedit={this.handlesaveeditcat} />\n              } /> \n        <Route exact path=\"/locremove/:id\" component={(props) => \n            <Removepage2 {...props} onremove={this.handleremove}\n              noteloc={this.state.notes[props.match.params.id]}\n              dbloc={this.state.dbapp} />} />\n              {/* flat with map */}\n        <Route exact path=\"/categornative\" component={(props) => \n            <Categornative {...props} categories={this.state.categories}/>} /> \n        {/* <Route exact path=\"/categornativemini\" component={(props) => \n            <Categornativemini {...props} notes={this.state.notes}/>} /> */}\n        {/* <Route exact path=\"/sectionlist\" component={(props) => \n            <Sectionlist11 {...props} \n              notvalues={Object.values(this.state.notes)}\n              catvalues={Object.values(this.state.categories)} />} /> */}\n         <Route exact path=\"/sectionlist\" component={(props) => \n            <Sectionlist12 {...props} notes={this.state.notes}\n              categories1={this.state.categories} />} />\n              {/* traversy */}\n        <Route exact path=\"/categories1\" component={(props) => \n            <Categories1 {...props} categories={this.state.categories} />} /> \n        {/* infinite update <Route exact path=\"/categories/:id\" component={(props) => \n            <Showcategory1 {...props} getcatnotessh={this.getcatnotesap}\n              cat={this.state.categories[props.match.params.id]} />} /> */}\n        <Route exact path=\"/categories/:id\" component={(props) => \n            <Showcategory2 {...props} \n              cat={this.state.categories[props.match.params.id]} />} />\n    </div>\n    );\n  }\n  indicator11 = () => this.state.loading ? \n    (<ActivityIndicator size=\"large\" color=\"rgb(135, 125, 100)\" animating />)\n    : null\n    ;\n  render() {\n    const reactvers = React.version;\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            React {reactvers} on {this.state.aos}\n            \n            <View style={stylesnative.box}>\n              <Text style={stylesnative.text}>React Native Insert</Text>\n            </View>\n            { this.rendercontent() }\n            \n            <Hellonative />\n            <div className=\"navbardiv\">\n              <Navbar2 />\n            </div>\n            <Footer3 />\n          </div>\n      </BrowserRouter>\n      </Provider>\n      \n      \n    );\n  }\n}\nApp.propTypes = {\n  store: PropTypes.object.isRequired,\n}\n// Posts.propTypes = {\n//   fetchposts: PropTypes.func.isRequired,\n//   posts: PropTypes.array.isRequired,\n//   newpost: PropTypes.object\n// }\n// posts come from postreducer to rootreducer(index) to here\n// const mapstatetoprops = state => ({\n//   posts:   state.rootposts.items,\n//   newpost: state.rootposts.item1\n// });\n\n export default App;\n// const mapstatetostate = state => ({\n//   notes:   state.rootposts.items,\n// });\n // export default connect(mapstatetostate, { fetchlocations1 })(App);\n//  {/* <Editcat {...props} onsaveedit={this.handlesaveeditcat}\n//               notecat={this.state.categories[props.match.params.id]}/> */}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { AppRegistry } from 'react-native';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n// App0 works\nAppRegistry.registerComponent(\"App\", () => App);\nAppRegistry.runApplication(\"App\", {\n    rootTag: document.getElementById(\"root\")\n});\nserviceWorker.unregister();\n"],"sourceRoot":""}